{"version":3,"sources":["components/PricingTables/index.js","components/PayProcess/index.js"],"names":["PricingTable1","_ref","item","index","secret","formValues","uuid","loadingPay","pay","react_default","a","createElement","className","style","height","option","price","toFixed","textAlign","icon","type","es_button","loading","concat","onClick","hidden","id","action","process","method","name","value","JSON","stringify","optionid","PricingTable2","_ref2","Section","_ref3","processSelected","_useState","useState","_useState2","Object","slicedToArray","setLoadingPay","_ref4","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","document","getElementById","submit","stop","_x","apply","this","arguments","quotes","map","rest","data","PricingTables_PricingTable1","PricingTables_PricingTable2","Step","Steps","Option","Select","countries","require","default","radioStyle","display","lineHeight","formItemLayout","labelCol","xs","span","sm","wrapperCol","StepsButtons","styled","Button","_templateObject","options","keys","key","connect","state","rootReducer","Form","create","injectIntl","withRouter","props","form","history","getFieldDecorator","messages","intl","current","setCurrent","_useState3","_useState4","_useState5","_useState6","showBilling","setShowBilling","_useState7","_useState8","applyTax","setApplyTax","_useState9","_useState10","_useState11","address","country","vattax","_useState12","setFormValues","useEffect","push","console","log","steps","title","payment","step1","content","Fragment","es_radio","Group","onChange","e","target","defaultValue","question1","question2","question3","step2","es_form","Item","label","initialValue","rules","required","message","error","input","hasFeedback","es_select","showSearch","aux","optionFilterProp","filterOption","children","toLowerCase","indexOf","placeholder","step3","row","justify","PricingTables","marginTop","es_alert","alert","showIcon","rc_queue_anim_es","modal","es_steps","marginLeft","previous","validateFields","err","values","continent","sum"],"mappings":"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","file":"static/js/19.c9f48f02.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Icon, Button } from 'antd';\n\n\nconst REACT_APP_API = process.env.REACT_APP_API;\n\nconst PricingTable1 = ({ item, index, secret, formValues, uuid, loadingPay, pay }) => (\n    <article className=\"pricing-table-v1\">\n        <header style={{ height: 80 }}> <h2>{item.option}</h2> </header>\n        <p className=\"pricing-price\"> €{item.price.toFixed(2)}</p>\n        <p className=\"pricing-price-detail\">Aspernatur omnis nemo <br /> omnis porro cupiditate quaera!</p>\n        <div className=\"pricing-plan-details\" style={{ textAlign: \"left\" }}>\n            <ul>\n                <li><Icon type=\"check\" /> At erat</li>\n                <li><Icon type=\"check\" /> Sagittis aliquam</li>\n                <li><Icon type=\"check\" /> Donec enim</li>\n                <li><Icon type=\"check\" /> Tellus rutrum</li>\n            </ul>\n        </div>\n        <footer><Button\n            loading={loadingPay === `quote${index}`}\n            onClick={() => {\n                pay(`quote${index}`);\n            }}\n            className=\"btn-cta w-100\">Get it now</Button></footer>\n        <form\n            hidden\n            id={`quote${index}`}\n            action={`${REACT_APP_API}/api/payment/pay`}\n            method=\"post\"\n        >\n            <input type=\"text\" name=\"secret\" value={secret} />\n            <input\n                type=\"text\"\n                name=\"billing\"\n                value={JSON.stringify(formValues)}\n            />\n            <input type=\"text\" name=\"uuid\" value={uuid} />\n            <input type=\"text\" name=\"quote\" value={item.optionid} />\n        </form>\n    </article>\n)\n\nconst PricingTable2 = ({ item, index, secret, formValues, uuid, loadingPay, pay }) => (\n    <article className=\"pricing-table-v1 pricing-table-highlight\">\n        <header style={{ height: 80 }}> <h2>{item.option}</h2> </header>\n        <p className=\"pricing-price\"> €{item.price.toFixed(2)} </p>\n        <p className=\"pricing-price-detail\">Aspernatur omnis nemo <br /> omnis porro cupiditate quaera!</p>\n        <div className=\"pricing-plan-details\" style={{ textAlign: \"left\" }}>\n            <ul>\n                <li><Icon type=\"check\" /> Laoreet id</li>\n                <li><Icon type=\"check\" /> Quis blandit</li>\n                <li><Icon type=\"check\" /> 100GB Leo vel</li>\n                <li><Icon type=\"check\" /> 10 Ac felis</li>\n            </ul>\n        </div>\n        <footer><Button\n            loading={loadingPay === `quote${index}`}\n            onClick={() => {\n                pay(`quote${index}`);\n            }}\n            className=\"btn-cta w-100\">Get it now</Button></footer>\n        <form\n            hidden\n            id={`quote${index}`}\n            action={`${REACT_APP_API}/api/payment/pay`}\n            method=\"post\"\n        >\n            <input type=\"text\" name=\"secret\" value={secret} />\n            <input\n                type=\"text\"\n                name=\"billing\"\n                value={JSON.stringify(formValues)}\n            />\n            <input type=\"text\" name=\"uuid\" value={uuid} />\n            <input type=\"text\" name=\"quote\" value={item.optionid} />\n        </form>\n    </article>\n)\n\n\nconst Section = ({ processSelected, secret, formValues }) => {\n\n    const [loadingPay, setLoadingPay] = useState(false)\n    const pay = async id => {\n        setLoadingPay(id);\n        document.getElementById(id).submit();\n    };\n    if (processSelected && processSelected.quotes) {\n        return (\n            <article className=\"article\">\n                <div className=\"row\">\n                    {\n                        processSelected.quotes.map((item, index) => {\n                            const rest = (index % 2) === 0;\n                            const data = {\n                                item,\n                                index,\n                                secret,\n                                formValues,\n                                uuid: processSelected.uuid,\n                                loadingPay,\n                                pay\n                            }\n                            return (\n                                <div className=\"col-sm-auto col-md-6 col-lg-4 col-xsm-6\">\n                                    {rest ? <PricingTable1 {...data} /> : <PricingTable2 {...data} />}\n                                </div>\n                            )\n                        })\n                    }\n\n\n                </div>\n            </article>\n        )\n    }\n    return (<h1>No Quotes</h1>)\n\n}\n\nexport default Section;\n","import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux';\nimport { injectIntl } from 'react-intl'\nimport styled from 'styled-components';\nimport QueueAnim from 'rc-queue-anim';\nimport { withRouter } from 'react-router-dom';\nimport {\n    Row,\n    Col,\n    Form,\n    Input,\n    Alert,\n    Button,\n    Select,\n    Icon,\n    Radio,\n    Steps,\n    Tooltip,\n} from 'antd';\n\nimport PricingTables from './../PricingTables'\n\nimport './index.css'\n\n\nconst { Step } = Steps;\nconst Option = Select.Option;\nconst countries = require('utils/countries').default;\n\nconst radioStyle = {\n    display: 'block',\n    height: '30px',\n    lineHeight: '30px',\n};\n\nconst formItemLayout = {\n    labelCol: {\n        xs: { span: 24 },\n        sm: { span: 8 },\n    },\n    wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 },\n    },\n};\n\nconst StepsButtons = styled(Button)`\n  margin: 5px;\n`;\n\nconst options = Object.keys(countries).map(key => {\n    return (\n        <Option key={key} value={key}>\n            {countries[key].name}\n        </Option>\n    );\n});\n\nconst PayProcess = (props) => {\n    const {\n        form,\n        history,\n        form: { getFieldDecorator },\n        intl: { messages },\n        process: { processSelected }\n    } = props;\n\n    const [current, setCurrent] = useState(0)\n    const [loadingPay, setLoadingPay] = useState(false)\n    const [showBilling, setShowBilling] = useState('0')\n    const [applyTax, setApplyTax] = useState(false)\n    const [secret, setSecret] = useState(null)\n    const [formValues, setFormValues] = useState({\n        name: '',\n        address: '',\n        country: 'ES',\n        vattax: '',\n    })\n\n    useEffect(() => {\n        if (!processSelected) {\n            history.push('/');\n        }\n    }, [history, processSelected, props])\n\n    const onRadioChange = e => {\n        setShowBilling(e.target.value)\n    };\n\n    const handleChange = value => {\n        let aux = formValues;\n        aux.country = value;\n        setFormValues(aux)\n    };\n\n    const next = () => {\n        if (current === 1) {\n            form.validateFields((err, values) => {\n                if (err) {\n                    return;\n                }\n                values.continent = countries[values.country].continent;\n                if (countries[values.country].continent === 'EU') {\n                    setApplyTax(true)\n                }\n                setCurrent(current + 1)\n                setFormValues(values)\n            });\n        } else {\n            let sum = 1;\n            if (current === 0 && showBilling === '2') {\n                sum = 2;\n            }\n            setCurrent(current + sum)\n        }\n    }\n\n    const prev = () => {\n        let rest = 1;\n        if (current === 2 && showBilling === '2') {\n            rest = 2;\n        }\n        setCurrent(current - rest)\n    }\n\n    console.log(\"processSelected\", processSelected)\n\n\n\n    const steps = [\n        {\n            title: messages.payment.step1,\n            icon: <Icon type=\"question-circle\" />,\n            content: (\n                <React.Fragment>\n                    <Radio.Group onChange={onRadioChange} defaultValue={showBilling}>\n                        <Radio style={radioStyle} value=\"0\">\n                            {messages.payment.question1}\n                        </Radio>\n                        <Radio style={radioStyle} value=\"1\">\n                            {messages.payment.question2}\n                        </Radio>\n                        <Radio style={radioStyle} value=\"2\">\n                            {messages.payment.question3}\n                        </Radio>\n                    </Radio.Group>\n                </React.Fragment>\n            ),\n        },\n        {\n            title: messages.payment.step2,\n            icon: <Icon type=\"solution\" />,\n            content: (\n                <div className=\"col-12 p-4\">\n                    <Form {...formItemLayout}>\n                        <Form.Item label={messages.payment.form.name}>\n                            {getFieldDecorator('name', {\n                                initialValue: formValues.name,\n                                rules: [\n                                    {\n                                        required: true,\n                                        message: messages.payment.form.error.name,\n                                    },\n                                ],\n                            })(<Input />)}\n                        </Form.Item>\n                        <Form.Item label={messages.payment.form.address}>\n                            {getFieldDecorator('address', {\n                                initialValue: formValues.address,\n                                rules: [\n                                    {\n                                        required: true,\n                                        message: messages.payment.form.error.address,\n                                    },\n                                ],\n                            })(<Input />)}\n                        </Form.Item>\n                        <Form.Item label={messages.payment.form.country} hasFeedback>\n                            {getFieldDecorator('country', {\n                                initialValue: formValues.country,\n                                rules: [\n                                    {\n                                        required: true,\n                                        message: messages.payment.form.error.country,\n                                    },\n                                ],\n                            })(\n                                <Select\n                                    showSearch\n                                    onChange={handleChange}\n                                    optionFilterProp=\"children\"\n                                    filterOption={(input, option) =>\n                                        option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                                    }\n                                    placeholder={messages.payment.form.error.country}\n                                >\n                                    {options}\n                                </Select>\n                            )}\n                        </Form.Item>\n                        {showBilling === '0' && formValues.country === 'ES' && (\n                            <Form.Item label={messages.payment.form.vattax}>\n                                {getFieldDecorator('vattax', {\n                                    initialValue: formValues.vattax,\n                                    rules: [\n                                        {\n                                            required: true,\n                                            message: messages.payment.form.error.vattax,\n                                        },\n                                    ],\n                                })(<Input />)}\n                            </Form.Item>\n                        )}\n                    </Form>\n                </div>\n\n            ),\n        },\n        {\n            title: messages.payment.step3,\n            icon: <Icon type=\"euro\" />,\n            content: (\n                <Row justify=\"center\" type=\"flex\">\n                    {/* <Alert\n                        style={{ marginBottom: 20 }}\n                        message={messages.payment.info}\n                        type=\"info\"\n                        showIcon\n                    /> */}\n                    <PricingTables secret={secret} formValues={formValues} processSelected={processSelected || []} />\n                    {/* {processSelected && processSelected.quotes\n                        ? processSelected.quotes.map((item, index) => {\n                            return (\n                                <Col key={item.optionid} xs={24} md={8}>\n                                    <Row justify=\"center\" type=\"flex\" align=\"middle\">\n                                        <Col\n                                            style={{\n                                                textAlign: 'center',\n                                                minHeight: 45,\n                                            }}\n                                        >\n                                            <Tooltip title=\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\">\n                                                <Icon type=\"question-circle\" />\n                                            </Tooltip>\n                                            <h4 style={{ minHeight: 41 }}>{item.option}</h4>\n\n                                            <form\n                                                hidden\n                                                id={`quote${index}`}\n                                                action={`${REACT_APP_API}/api/payment/pay`}\n                                                method=\"post\"\n                                            >\n                                                <input type=\"text\" name=\"secret\" value={secret} />\n                                                <input\n                                                    type=\"text\"\n                                                    name=\"billing\"\n                                                    value={JSON.stringify(formValues)}\n                                                />\n                                                <input type=\"text\" name=\"uuid\" value={processSelected.uuid} />\n                                                <input type=\"text\" name=\"quote\" value={item.optionid} />\n                                            </form>\n\n                                            <Button\n                                                loading={loadingPay === `quote${index}`}\n                                                onClick={() => {\n                                                    this.pay(`quote${index}`);\n                                                }}\n                                                style={{ marginTop: 16 }}\n                                                type=\"primary\"\n                                            >\n                                                <React.Fragment>\n                                                    &nbsp;&nbsp;\n                                                <Icon type=\"euro\" /> {calculatePrice(item.price)}\n                                                </React.Fragment>\n                                            </Button>\n                                        </Col>\n                                    </Row>\n                                </Col>\n                            );\n                        })\n                        : null} */}\n\n                    {applyTax && (\n                        <div style={{ marginTop: 20 }}>\n                            <Alert message={messages.payment.alert} type=\"info\" showIcon />\n                        </div>\n                    )}\n                </Row>\n            ),\n        },\n    ];\n\n\n\n    return (\n        <QueueAnim type=\"bottom\" className=\"ui-animate\">\n            <div key=\"1\" className=\"row justify-content-md-center\">\n                <div className=\"form-card__body col-md-10 col-lg-10 col-xl-8 col-xxl p-4\">\n                    <article className=\"article\">\n                        <div className=\"box box-default\">\n                            <div className=\"box-body p-4\">\n                                <section className=\"form-v1-container\">\n                                    <h2>{messages.payment.modal}</h2>\n                                    <Steps current={current}>\n                                        {steps.map(item => (\n                                            <Step key={item.title} title={item.title} icon={item.icon} />\n                                        ))}\n                                    </Steps>\n\n                                    <div className=\"steps-content\">{steps[current].content}</div>\n                                    <div className=\"steps-action\">\n                                        {current > 0 && (\n                                            <StepsButtons style={{ marginLeft: 8 }} onClick={() => prev()}>\n                                                {messages.payment.previous}\n                                            </StepsButtons>\n                                        )}\n                                        {current < 2 && (\n                                            <StepsButtons type=\"primary\" onClick={() => next()}>\n                                                {messages.payment.next}\n                                            </StepsButtons>\n                                        )}\n                                    </div>\n                                </section>\n                            </div>\n                        </div>\n                    </article>\n                </div>\n            </div>\n        </QueueAnim>\n    )\n}\n\n\n\nfunction mapStateToProps(state) {\n    return {\n        process: state.rootReducer.process,\n    };\n}\n\nexport default connect(\n    mapStateToProps\n)(Form.create()(injectIntl(withRouter(PayProcess))));"],"sourceRoot":""}